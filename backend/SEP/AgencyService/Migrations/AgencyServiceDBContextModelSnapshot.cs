// <auto-generated />
using AgencyService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgencyService.Migrations
{
    [DbContext(typeof(AgencyServiceDBContext))]
    partial class AgencyServiceDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AgencyService.Models.ServiceOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("AgencyService.Models.ServiceOfferItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<int>("MonthlyPrice")
                        .HasColumnType("int");

                    b.Property<string>("OfferName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("CODIFICATION_OF_LAWS");

                    b.Property<int>("ServiceOfferId")
                        .HasColumnType("int");

                    b.Property<int>("YearlyPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceOfferId");

                    b.ToTable("OfferItems");
                });

            modelBuilder.Entity("AgencyService.Models.ServiceOfferItem", b =>
                {
                    b.HasOne("AgencyService.Models.ServiceOffer", "ServiceOffer")
                        .WithMany("ServiceOfferItems")
                        .HasForeignKey("ServiceOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceOffer");
                });

            modelBuilder.Entity("AgencyService.Models.ServiceOffer", b =>
                {
                    b.Navigation("ServiceOfferItems");
                });
#pragma warning restore 612, 618
        }
    }
}
