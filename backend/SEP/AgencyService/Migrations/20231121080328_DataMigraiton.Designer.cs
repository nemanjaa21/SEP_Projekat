// <auto-generated />
using AgencyService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgencyService.Migrations
{
    [DbContext(typeof(AgencyServiceDBContext))]
    [Migration("20231121080328_DataMigraiton")]
    partial class DataMigraiton
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AgencyService.Models.ServiceOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("AgencyService.Models.ServiceOfferItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<double>("MonthlyPrice")
                        .HasColumnType("float");

                    b.Property<string>("OfferName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("CODIFICATION_OF_LAWS");

                    b.Property<double>("YearlyPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("OfferItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAccepted = false,
                            MonthlyPrice = 24.989999999999998,
                            OfferName = "CODIFICATION_OF_LAWS",
                            YearlyPrice = 149.99000000000001
                        },
                        new
                        {
                            Id = 2,
                            IsAccepted = false,
                            MonthlyPrice = 11.99,
                            OfferName = "ISSUANCE_OF_LAWS_ELECTRONIC_FORM",
                            YearlyPrice = 99.989999999999995
                        },
                        new
                        {
                            Id = 3,
                            IsAccepted = false,
                            MonthlyPrice = 31.989999999999998,
                            OfferName = "ISSUANCE_OF_LAWS_PRINTED_FORM",
                            YearlyPrice = 240.0
                        },
                        new
                        {
                            Id = 4,
                            IsAccepted = false,
                            MonthlyPrice = 6.9900000000000002,
                            OfferName = "PUBLICATION_OF_LAWS_ON_INTERNET",
                            YearlyPrice = 39.990000000000002
                        });
                });

            modelBuilder.Entity("ServiceOfferServiceOfferItem", b =>
                {
                    b.Property<int>("ServiceOfferItemsId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceOffersId")
                        .HasColumnType("int");

                    b.HasKey("ServiceOfferItemsId", "ServiceOffersId");

                    b.HasIndex("ServiceOffersId");

                    b.ToTable("ServiceOfferServiceOfferItem");
                });

            modelBuilder.Entity("ServiceOfferServiceOfferItem", b =>
                {
                    b.HasOne("AgencyService.Models.ServiceOfferItem", null)
                        .WithMany()
                        .HasForeignKey("ServiceOfferItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgencyService.Models.ServiceOffer", null)
                        .WithMany()
                        .HasForeignKey("ServiceOffersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
